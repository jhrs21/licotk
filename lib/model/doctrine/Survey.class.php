<?php

/**
 * Survey
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    elperro
 * @subpackage model
 * @author     Jacobo Martinez <jacobo.amn87@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Survey extends BaseSurvey {

    public function asArray($useAlphaId = false, $onlyActiveItems = false) {
        $array = array(
            'id' => $useAlphaId ? $this->getAlphaId() : $this->getId(),
            'name' => $this->getName(),
            'items' => array(),
        );

        $items = $this->getOrderedItems($onlyActiveItems);

        foreach ($items as $item) {
            $array['items'][($useAlphaId ? $item->getAlphaId() : $item->getId())] = $item->asArray($useAlphaId);
        }

        return $array;
    }

    /**
     * Returns all the items of a survey.
     * 
     * @param boolean $activeOnly
     * @return Doctrine_Collection  A collection of SurveyItem Objects
     * @see SurveyItem
     */
    public function getOrderedItems($activeOnly = true) {
        return Doctrine::getTable('SurveyItem')->retrieveSurveyOrderedItems($this->getId(), $activeOnly);
    }

    public function getItemsNames($ordered = false) {
        $items = null;

        if ($ordered) {
            $items = $this->getOrderedItems(false);
        } else {
            $items = $this->getItems();
        }

        $names = array();

        foreach ($items as $item) {
            $names[$item->getId()] = $item->getLabel();
        }

        return $names;
    }

    public function getTimesApplied($assets = null) {
        if (is_null($assets)) {
            return $this->getApplications()->count();
        }

        $table = Doctrine::getTable('SurveyApplication');

        $q = $table->addBySurveyIdQuery($this->getId(), $table->addByAssetsQuery($assets));

        return $q->count();
    }

    public function getNumUsersApplied($assets = null) {
        if (is_null($assets)) {
            return $this->getApplications()->count();
        }

        $table = Doctrine::getTable('SurveyApplication');

        $q = $table->addBySurveyIdQuery($this->getId(), $table->addByAssetsQuery($assets, $table->addUniqueUsersQuery()));

        return $q->count();
    }

    public function getApplicationsForAssets($assetsIds = array()) {
        if (!count($assetsIds)) {
            return $this->getApplications();
        }

        $applications = Doctrine::getTable('SurveyApplication')->retrieveBySurveyAndAssets($this->getId(), $assetsIds);

        if ($applications->count()) {
            return $applications;
        }

        return array();
    }

    public function save(Doctrine_Connection $conn = null) {
        if (!$this->getAlphaId()) {
            $this->setAlphaId(Util::gen_uuid(hash('sha256', time() . rand(11111, 99999))));
        }

        return parent::save($conn);
    }

}