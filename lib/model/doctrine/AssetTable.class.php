<?php

/**
 * AssetTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class AssetTable extends Doctrine_Table {
    public function addBySurveyQuery($survey, Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()->from('Asset a');
        }

        $alias = $q->getRootAlias();
        
        $q->leftJoin($alias.'.SurveysTaken s');

        $q->andWhere('s.survey_id = ?', $survey);

        return $q;
    }

    public function addByAffiliateQuery($affiliate, Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
                    ->from('Asset a');
        }

        $alias = $q->getRootAlias();

        $q->andWhere($alias . '.affiliate_id = ?', $affiliate);

        return $q;
    }

    public function addByAffiliatesQuery($affiliates = array(), Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
                    ->from('Asset a');
        }

        $alias = $q->getRootAlias();

        $q->andWhereIn($alias . '.affiliate_id', $affiliates);

        return $q;
    }

    public function addByParticipationInActivePromosQuery(Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()->from('Asset a');
        }

        $alias = $q->getRootAlias();

        $q->leftJoin($alias . '.AssetPromo ap');
        $q->leftJoin('ap.Promo p');

        $q->andWhere('p.starts_at <= ?', date('Y-m-d H:i:s', mktime(0, 0, 0, date("m"), date("d"), date("Y"))));
        $q->andWhere('p.expires_at >= ?', date('Y-m-d H:i:s', mktime(0, 0, 0, date("m"), date("d"), date("Y"))));

        return $q;
    }

    /**
     * Encuentra activos basados en la distancia dada una ubicación (latitud, longitud) 
     * y una distancia máxima.
     * 
     * 1° de latitud ~= 111.14 km
     * 1° de longitud ~= cos(latitud)*111.14
     * Radio de la tierra: 6366.6 km
     * 
     * @param type $lat
     * @param type $long
     * @param type $maxDistance
     * @param type $orderByDistance
     * @param Doctrine_Query $q
     * @return Doctrine_Query
     */
    public function addByDistanceQuery($lat, $long, $maxDistance = 0, $orderByDistance = true, Doctrine_Query $q = null) {
        if ($maxDistance == 0) {
            $maxDistance = sfConfig::get('app_mobile_app_search_distance_radius');
        }

        $earth_radius = 6371; /* Radio de La Tierra en Km. */
        $radian_factor = 0.0174532925; /* M_PI/180 usado para convertir de grados a radianes (M_PI = 3.1415926535898) */

        if (is_null($q)) {
            $q = Doctrine_Query::create()->from('Asset a');
        }

        $alias = $q->getRootAlias();

        $q->addSelect('*');

        $q->addSelect('l.*');

        $q->addSelect(
                'ROUND(
                2 *' . $earth_radius . '* ASIN(
                    SQRT(
                        POWER(SIN((' . $lat . '- ABS(l.latitude))*' . $radian_factor . '/2),2)
                        + COS(' . $lat . '*' . $radian_factor . ') 
                        * COS(ABS(l.latitude)*' . $radian_factor . ') 
                        * POWER(SIN((' . $long . '-l.longitude)*' . $radian_factor . '/2),2) 
                    )
                ),
                2
            ) AS distance'
        );

        $q->leftJoin($alias . '.Location l');

        if ($maxDistance > 0) {
            $lon1 = $long - ($maxDistance / abs(cos($lat * $radian_factor) * 111.14));
            $lon2 = $long + ($maxDistance / abs(cos($lat * $radian_factor) * 111.14));

            $lat1 = $lat - ($maxDistance / 111.14);
            $lat2 = $lat + ($maxDistance / 111.14);

            $q->andWhere('l.longitude BETWEEN ' . $lon1 . ' AND ' . $lon2);
            $q->andWhere('l.latitude BETWEEN ' . $lat1 . ' AND ' . $lat2);
            $q->addHaving('distance <= ' . $maxDistance);
        }

        if ($orderByDistance) {
            $q->addOrderBy('distance');
        }

        return $q;
    }

    public function addByCityQuery($city, Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()->from('Asset a');
        }

        $alias = $q->getRootAlias();

        $q->addSelect('*');

        $q->addSelect('l2.*');
        $q->leftJoin($alias . '.Location l2');
        $q->andWhere('l2.city_id = ?', $city);

        return $q;
    }

    public function addByCategoryQuery($category, Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()->from('Asset a');
        }

        $alias = $q->getRootAlias();

        $q->addWhere($alias . '.category_id = ?', $category);

        return $q;
    }

    public function addByTypeQuery($type = 'place', Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()->from('Asset a');
        }

        $alias = $q->getRootAlias();

        $q->andWhere($alias . '.asset_type = ?', $type);

        return $q;
    }

    public function addByKeywordQuery($keyword, Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()->from('Asset a');
        }

        $alias = $q->getRootAlias();

        $q->addWhere($alias . '.name LIKE ? OR ' . $alias . '.description LIKE ?', array('%' . $keyword . '%', '%' . $keyword . '%'));

        return $q;
    }

    public function addWithActivePromosQuery(Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()->from('Asset a');
        }

        $alias = $q->getRootAlias();

        $q->leftJoin($alias.'.AssetPromo ap')
                ->leftJoin('ap.Promo p')
                ->andWhere('p.starts_at <= ?', date('Y-m-d H:i:s', mktime(0, 0, 0, date("m"), date("d"), date("Y"))))
                ->andWhere('p.expires_at >= ?', date('Y-m-d H:i:s', mktime(0, 0, 0, date("m"), date("d"), date("Y"))));

        return $q;
    }
    
    public function retrieveAssets($type = 'place', $affiliate = null, Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()->from('Asset a');
        }

        $q = $this->addByTypeQuery($type, $q);

        if (!is_null($affiliate)) {
            $q = $this->addByAffiliateQuery($affiliate, $q);
        }

        $q->orderBy('a.affiliate_id');

        return $q->execute();
    }

    public function retrieveAssetsByLocation($lat, $long, $maxDistance = 1, $type = 'place', $affiliate = null, Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()->from('Asset a');
        }

        $q = $this->addByTypeQuery($type, $q);

        if (!is_null($affiliate)) {
            $q = $this->addByAffiliateQuery($affiliate, $q);
        }

        $q->orderBy('a.affiliate_id');

        return $q->execute();
    }

    public function retrievePromoted($limit, $type = 'place', $category = false) {
        $q = $this->addByTypeQuery($type);
        $q = $this->addWithActivePromosQuery($q);
        
        if ($category) {
            $q = $this->addByCategoryQuery($category, $q);
        }
        
        $q->limit($limit);
        $q->orderBy('RAND()');
        
        return $q->execute();
    }
    
    public function getBrandsQuery($category = false) {
        $q = $this->addByTypeQuery('brand');
        $q = $this->addWithActivePromosQuery($q);
        
        if ($category) {
            $q = $this->addByCategoryQuery($category, $q);
        }
        
        return $q;
    }
    
    /**
     * Returns an instance of this class.
     *
     * @return object AssetTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Asset');
    }

}