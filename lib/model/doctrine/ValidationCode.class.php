<?php

/**
 * ValidationCode
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    elperro
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ValidationCode extends BaseValidationCode
{
    protected $code_length = 5;
    protected $serial_length = 5;
    
    public function __construct($table = null, $isNewEntry = false, $options = array()) {
        
        if(isset($options['code_length'])){
            $this->code_length = $options['code_length'];
        }
        
        if(isset($options['serial_length'])){
            $this->serial_length = $options['serial_length'];
        }
        
        parent::__construct($table, $isNewEntry);
    }

    public function save(Doctrine_Connection $conn = null) 
    {
        if(!$this->code){
            $this->code = Util::GenSecret($this->code_length, Util::CHAR_MIX);

            $duplicated = true;

            $table = Doctrine::getTable('ValidationCode');

            while($duplicated){
                if(!$table->findOneBy('code', $this->code)){
                    $duplicated = false;
                }
                else{
                    $this->code = Util::GenSecret($this->code_length, Util::CHAR_MIX);
                }
            }
        }
        
        if(!$this->serial){
            $this->serial = Util::GenSecret($this->serial_length, Util::CHAR_NUM);

            $duplicated = true;

            $table = Doctrine::getTable('ValidationCode');

            while($duplicated){
                if(!$table->findOneByPromoCodeIdAndSerial($this->promo_code_id,  $this->serial)){
                    $duplicated = false;
                }
                else{
                    $this->serial = Util::GenSecret($this->serial_length, Util::CHAR_NUM);
                }
            }
        }
        
        if(!$this->used_at && $this->used){
            $this->used_at = date(DateTime::W3C);
        }
        
        return parent::save($conn);
    }
}